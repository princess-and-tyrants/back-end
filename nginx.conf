# events {}

# http {
#     limit_req_zone $binary_remote_addr zone=perip:10m rate=1r/s;

#     upstream backend {
#         server backend:8000;
#     }

#     server {
#         listen 80;
#         server_name mbtidapi.winterholic.net;

#         location / {
#             limit_req zone=perip burst=10 nodelay;

#             proxy_pass http://backend;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }
#     }
# }


# events {}

# http {
#     limit_req_zone $binary_remote_addr zone=perip:10m rate=1r/s;

#     server {
#         listen 80;
#         server_name mbtidapi.winterholic.net;

#         location / {
#             limit_req zone=perip burst=10 nodelay;

#             proxy_pass http://localhost:8000;

#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }

#     }
# }


# user  nginx;
# worker_processes  auto;
# error_log  /var/log/nginx/error.log warn;
# pid        /var/run/nginx.pid;

# events {
#     worker_connections  1024;
# }

# http {
#     include       /etc/nginx/mime.types;
#     default_type  application/octet-stream;

#     limit_req_zone $binary_remote_addr zone=dos_limit:10m rate=10r/s;

#     server {
#         listen 80;
#         server_name mbtidapi.winterholic.net;

#         location /.well-known/acme-challenge/ {
#             root /var/www/html;
#             try_files $uri =404;
#         }

#         location / {
#             return 301 https://$host$request_uri;  # HTTP -> HTTPS 리디렉션
#         }

#         access_log  /var/log/nginx/access.log;
#         error_log   /var/log/nginx/error.log;
#     }

#     server {
#     listen 443 ssl;
#     server_name mbtidapi.winterholic.net;

#     ssl_certificate /etc/letsencrypt/live/mbtidapi.winterholic.net/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/mbtidapi.winterholic.net/privkey.pem;

#     # 악성 URI 요청 차단
#     location ~* ^/(index\.php|containers/json|apps/|public/|app/|panel/|workspace/|admin/|backup/|blog/|cms/|crm/|demo/|api/|test/|testing/|tests/|V2/|ws/) {
# 	    return 488;
#     }

#     # Swagger 관련 요청은 rate limit 제외
#     location ~ ^/(docs) {
#         proxy_pass http://localhost:8000;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }

#     location / {
#         limit_req zone=dos_limit burst=10 nodelay;

#         proxy_pass http://localhost:8000;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }

#     access_log  /var/log/nginx/access.log;
#     error_log   /var/log/nginx/error.log;
#     }
# }




# user  nginx;
# worker_processes  auto;
# error_log  /var/log/nginx/error.log warn;
# pid        /var/run/nginx.pid;

# events {
#     worker_connections  1024;
# }

# http {
#     include        /etc/nginx/mime.types;
#     default_type  application/octet-stream;

#     limit_req_zone $binary_remote_addr zone=dos_limit:10m rate=10r/s;

#     upstream backend {
#         server backend:8000;
#     }

#     server {
#         listen 80;
#         listen [::]:80;
#         server_name mbtidapi.winterholic.net;

#         location /.well-known/acme-challenge/ {
#             root /var/www/html;
#             try_files $uri =404;
#         }

#         location / {
#             limit_req zone=dos_limit burst=10 nodelay;
#             proxy_pass http://backend;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }

#         access_log  /var/log/nginx/access.log;
#         error_log   /var/log/nginx/error.log;
#     }

# }



user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include        /etc/nginx/mime.types;
    default_type  application/octet-stream;

    limit_req_zone $binary_remote_addr zone=dos_limit:10m rate=10r/s;

    upstream backend {
        server backend:8000;
    }

    server {
        listen 80;
        listen [::]:80;
        server_name mbtidapi.winterholic.net;

        location /.well-known/acme-challenge/ {
            root /var/www/html;
            try_files $uri =404;
        }

        location / {
            return 301 https://$host$request_uri; # HTTP -> HTTPS 리디렉션
        }

        access_log  /var/log/nginx/access.log;
        error_log   /var/log/nginx/error.log;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name mbtidapi.winterholic.net;

        ssl_certificate /etc/letsencrypt/live/mbtidapi.winterholic.net/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/mbtidapi.winterholic.net/privkey.pem;

        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        ssl_stapling on;
        ssl_stapling_verify on;
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";

        # 의심스러운 경로 차단
        location ~* ^/(index\.php|containers/json|apps/|public/|app/|panel/|workspace/|admin/|backup/|blog/|cms/|crm/|demo/|api/|test/|testing/|tests/|v2/|ws/|swagger|swagger-ui|swagger-ui\.html|v3/api-docs|doc|docs|documentation|explorer|phpmyadmin|wp-|wordpress|env|.env|\.git|\.svn|vendor|composer\.json|package\.json) {
            return 488;
        }

        # TRACE, TRACK 메소드 차단
        if ($request_method ~* (TRACE|TRACK)) {
            return 405;
        }

        # 숨겨진 파일 접근 차단 (.htaccess, .env 등)
        location ~ /\.(?!well-known).* {
            deny all;
        }

        # Swagger 경로 추가 차단 (혹시 있을 경우 대비)
        location ~* /(docs|swagger|swagger-ui|api-docs|openapi|redoc) {
            return 488;
        }

        # location ~ ^/(docs) {
        #     proxy_pass http://backend;
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        # }

        location / {
            limit_req zone=dos_limit burst=10 nodelay;
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        access_log  /var/log/nginx/access.log;
        error_log   /var/log/nginx/error.log;
    }

}